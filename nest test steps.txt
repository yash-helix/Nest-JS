Intro: In this session we'll be learning how to test our nestjs resolvers.

1. 
In the test file import 'Test' & 'TestingModule' from @nestjs/testing. We're using 'Jest' module here for the test. Testing files should have a .spec or .test suffix.
ex: import { Test, TestingModule } from '@nestjs/testing';


2.
As we will be testing the resolvers we will have to describe it using the 'describe method'. Any name can be given considering naming conventions.
This describe method takes the name of the resolver here as first parameter and a method as second parameter.
Our testing logic will be included in this method.
ex: 
describe('User Resolver', () => {
  ...testing logic
});


3.
Now let's import our resolver that needs to be tested and declare it in the method.
As we're doing the unit testing we will not have the Services but we also need them as resolver is using it.
So in this case we will create a mock service in test file and use it.
ex: 
import { UserResolver } from './modules/user.resolver';
import { UserService } from './modules/user.service';

describe('User Resolver', () => {
  let resolver: UserResolver;
  let userService = {};
});


4.
Now we write a beforeEach function in which we will create our testing module providing it with our resolver and mock service.
This beforeEach function, runs a function before each of the tests in this file runs.
ex:
beforeEach(async () => {
    const module: TestingModule = await Test.createTestingModule({
      providers: [UserResolver, 
      {
        provide: UserService,
        useValue: userService
      }
    ],
    }).compile();

    resolver = module.get<UserResolver>(UserResolver);
  });


5.
Now we will test our resolver by saying something like 
ex:
it('Testing Employee Resolver', () => {
      expect(resolver).toBeDefined();
});

and finally in the terminal exceute the command, "npm run test"




